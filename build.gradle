buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://ci.otr.mercedes-benz.com.cn:8443/repository/mvngroup/' }
}
dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Dalston.SR5'
	}
}

dependencies {
	compile 'org.projectlombok:lombok:1.16.14'
	compile 'org.springframework:spring-aop'
	compile 'org.springframework:spring-aspects'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.9'
    compile(group: "com.github.java-json-tools", name: "json-schema-validator", version: "2.2.8")
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.cloud:spring-cloud-netflix-core"
    compile('org.springframework.cloud:spring-cloud-starter-feign')
    compile('io.github.openfeign:feign-httpclient')
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix'
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile 'org.springframework:spring-test'
    testCompile "com.github.sbrannen:spring-test-junit5:1.0.0"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.2.0"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.2.0"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.2.0"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.junit.platform:junit-platform-launcher:1.2.0"
    testCompile "org.junit.platform:junit-platform-runner:1.2.0"
	testCompile("org.springframework.cloud:spring-cloud-contract-verifier")
	testCompile("org.springframework.cloud:spring-cloud-contract-stub-runner")
	testCompile("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
	testCompile("org.springframework.cloud:spring-cloud-contract-spec")
}

task sourceJar (type : Jar) {
	classifier = 'schema'
	from sourceSets.main.resources.include("/schema/json/**/*.*")
}

publishing {
	publications {
		stubs(MavenPublication) {
			groupId 'project'
			version '1.0'
			artifactId "customer"
			artifact (sourceJar) {
			}
		}
	}
	repositories {
		/*maven {
			url "file:/${project.projectDir}/artifacts"
		}*/
		mavenLocal()
	}
}
